@page "/categories/edit/{CategoryId:int}"
@attribute [Authorize(Roles = "Planner")]
@inject NavigationManager navigationManager
@inject IRepository repository
@inject SweetAlertService sweetAlertService

<h3>Editar Categoría</h3>

@if (category is null)
{
    <Loading />
}
else
{
    <CategoryForm @ref="categoryForm" Category="category" OnValidSubmit="SaveAsync" ReturnAction="Return" />
}

@code {

    private Category? category;
    private CategoryForm? categoryForm;

    [CascadingParameter]
    BlazoredModalInstance BlazoredModal { get; set; } = default!;

    [Parameter]
    public int CategoryId { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        var response = await repository.GetAsync<Category>($"/api/categories/{CategoryId}");
        if (response.Error)
        {
            if (response.HttpResponseMessage.StatusCode == HttpStatusCode.NotFound)
            {
                Return();
            }
            var message = await response.GetErrorMessageAsync();
            await sweetAlertService.FireAsync("Error", message, SweetAlertIcon.Error);
            return;
        }
        category = response.Response;
    }

    private async Task SaveAsync()
    {
        var response = await repository.PutAsync($"/api/categories", category);
        if (response.Error)
        {
            var message = await response.GetErrorMessageAsync();
            await sweetAlertService.FireAsync("Error", message, SweetAlertIcon.Error);
            return;
        }

        await BlazoredModal.CloseAsync(ModalResult.Ok());
        Return();

        var toast = sweetAlertService.Mixin(new SweetAlertOptions
            {
                Toast = true,
                Position = SweetAlertPosition.BottomEnd,
                ShowConfirmButton = true,
                Timer = 3000
            });
        await toast.FireAsync(icon: SweetAlertIcon.Success, message: "Cambios guardados con éxito.");
    }

    private void Return()
    {
        categoryForm!.FormPostedSuccessfully = true;
        navigationManager.NavigateTo("/categories");
    }

}